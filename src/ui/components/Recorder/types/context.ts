import { NameOwner } from "gpdb-api-client";
import Pronunciation from "../../../../types/resources/pronunciation";
import { TermsAndConditions } from "../../../hooks/useRecorderState";
import { STATES } from "../machine/states";
import { DeviceLabel } from "./device-label";
import { InboundRelativeSource } from "./inbound-relative-source";
import { SampleRate } from "./sample-rate";

export type IRecorderContext = {
  onDeletePronunciation: () => void;
  handleOnRecorderClose: () => void;
  onStart: () => void;
  onSave: () => Promise<void>;
  log: (message: string) => void;
  saving: boolean;
  onFileLoaded: (target: FileReader) => void;
  timer: number;
  countdown: number;
  audioUrl: string;
  displaySaving: boolean;
  onTermsAndConditionsAccept: () => Promise<void>;
  termsAndConditions: TermsAndConditions;
  currentStep: React.MutableRefObject<STATES>;
  onStop: () => Promise<void>;
  relativeSource: InboundRelativeSource;
  owner: NameOwner;
  pronunciation: Pronunciation;
  onSampleRateSave: () => void;
  closeSlider: () => void;
  slider: boolean;
  openSlider: () => void;
  currentSampleRate: SampleRate;
  onDefaultSampleRateClick: () => void;
  onUpdateSampleRate: (value: SampleRate) => void;
  deviceLabel?: DeviceLabel;
};
